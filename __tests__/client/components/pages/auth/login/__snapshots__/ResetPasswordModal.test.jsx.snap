// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResetPasswordModal component snapshot renders 1`] = `
.c4 {
  color: #666666;
  font-weight: 300;
  line-height: 1.9;
  margin-top: 0;
  margin-bottom: 16px;
}

.c4 a {
  color: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4 a:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c6 {
  background-color: transparent;
  border: 0;
  border-bottom: 1px solid #e9ecef;
  border-radius: 0;
  box-shadow: none;
  font-size: 11pt;
  font-weight: 300;
  margin-bottom: 8px;
  outline: none;
  padding: 12px 10px;
  -webkit-transition: border-color 100ms;
  transition: border-color 100ms;
  width: 100%;
}

.c6:hover {
  border-color: #b3b3b3;
}

.c6:focus {
  border-color: #2684ff;
}

.c6:focus + label {
  font-size: 75%;
  -webkit-transform: translate3d(0,-100%,0);
  -ms-transform: translate3d(0,-100%,0);
  transform: translate3d(0,-100%,0);
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
  margin-top: 30px;
  margin-bottom: 30px;
}

.c7 {
  left: 0;
  opacity: 0.5;
  font-weight: 300;
  padding-left: 10px;
  padding-top: 10px;
  position: absolute;
  top: 0;
  -webkit-transition: all 200ms;
  transition: all 200ms;
}

.c3 {
  text-align: center;
}

.c2 {
  height: 32px;
  opacity: 0.3;
  position: relative;
  width: 32px;
}

.c2:hover {
  cursor: pointer;
  opacity: 1;
}

.c2:before,
.c2:after {
  background-color: #333;
  content: " ";
  height: 33px;
  left: 15px;
  position: absolute;
  width: 2px;
}

.c2:before {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.c2:after {
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 30px;
}

.c0 {
  background-color: #ffffff;
  border: 1px solid #e9ecef;
  bottom: auto;
  left: 50%;
  max-width: 650px;
  outline: none;
  padding: 20px 20px 62px;
  position: absolute;
  right: auto;
  top: 43%;
  width: calc(100% - 20px);
  border-radius: 2px;
  padding-bottom: 62px;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

.c8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #1188e6;
  border: 1px solid #1288e5;
  border-radius: 2px;
  color: #ffffff;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 10pt;
  font-weight: 300;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-bottom: 11px;
  outline-width: 3px;
  padding: 10px 17px;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
  width: 100%;
}

.c8:disabled {
  cursor: unset;
  opacity: 0.4;
}

@media (min-width:768px) {
  .c5 {
    min-width: 250px;
  }
}

@media (min-width:768px) {
  .c3 {
    padding: 10px 20px;
  }
}

@media (min-width:768px) {
  .c1 {
    padding-left: 20px;
  }
}

<ResetPasswordModal
  close={[MockFunction]}
  isOpen={true}
>
  <Modal
    close={[MockFunction]}
    isOpen={true}
  >
    <styles__Modal
      ariaHideApp={false}
      isOpen={true}
      onRequestClose={[MockFunction]}
    >
      <StyledComponent
        ariaHideApp={false}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styles__Modal-sc-1wd5qfj-4",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "background-color:#ffffff;border:1px solid #e9ecef;bottom:auto;left:50%;max-width:650px;outline:none;padding:20px 20px 62px;position:absolute;right:auto;top:43%;width:calc(100% - 20px);",
                [Function],
              ],
            },
            "defaultStyles": Object {
              "content": Object {
                "WebkitOverflowScrolling": "touch",
                "background": "#fff",
                "border": "1px solid #ccc",
                "borderRadius": "4px",
                "bottom": "40px",
                "left": "40px",
                "outline": "none",
                "overflow": "auto",
                "padding": "20px",
                "position": "absolute",
                "right": "40px",
                "top": "40px",
              },
              "overlay": Object {
                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                "bottom": 0,
                "left": 0,
                "position": "fixed",
                "right": 0,
                "top": 0,
              },
            },
            "displayName": "styles__Modal",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styles__Modal-sc-1wd5qfj-4",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isOpen={true}
        onRequestClose={[MockFunction]}
      >
        <Modal
          ariaHideApp={false}
          bodyOpenClassName="ReactModal__Body--open"
          className="c0"
          closeTimeoutMS={0}
          isOpen={true}
          onRequestClose={[MockFunction]}
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          role="dialog"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={true}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
        >
          <Portal
            containerInfo={
              .c4 {
  color: #666666;
  font-weight: 300;
  line-height: 1.9;
  margin-top: 0;
  margin-bottom: 16px;
}

.c4 a {
  color: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4 a:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c6 {
  background-color: transparent;
  border: 0;
  border-bottom: 1px solid #e9ecef;
  border-radius: 0;
  box-shadow: none;
  font-size: 11pt;
  font-weight: 300;
  margin-bottom: 8px;
  outline: none;
  padding: 12px 10px;
  -webkit-transition: border-color 100ms;
  transition: border-color 100ms;
  width: 100%;
}

.c6:hover {
  border-color: #b3b3b3;
}

.c6:focus {
  border-color: #2684ff;
}

.c6:focus + label {
  font-size: 75%;
  -webkit-transform: translate3d(0,-100%,0);
  -ms-transform: translate3d(0,-100%,0);
  transform: translate3d(0,-100%,0);
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
  margin-top: 30px;
  margin-bottom: 30px;
}

.c7 {
  left: 0;
  opacity: 0.5;
  font-weight: 300;
  padding-left: 10px;
  padding-top: 10px;
  position: absolute;
  top: 0;
  -webkit-transition: all 200ms;
  transition: all 200ms;
}

.c3 {
  text-align: center;
}

.c2 {
  height: 32px;
  opacity: 0.3;
  position: relative;
  width: 32px;
}

.c2:hover {
  cursor: pointer;
  opacity: 1;
}

.c2:before,
.c2:after {
  background-color: #333;
  content: " ";
  height: 33px;
  left: 15px;
  position: absolute;
  width: 2px;
}

.c2:before {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.c2:after {
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 30px;
}

.c0 {
  background-color: #ffffff;
  border: 1px solid #e9ecef;
  bottom: auto;
  left: 50%;
  max-width: 650px;
  outline: none;
  padding: 20px 20px 62px;
  position: absolute;
  right: auto;
  top: 43%;
  width: calc(100% - 20px);
  border-radius: 2px;
  padding-bottom: 62px;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

.c8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #1188e6;
  border: 1px solid #1288e5;
  border-radius: 2px;
  color: #ffffff;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 10pt;
  font-weight: 300;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-bottom: 11px;
  outline-width: 3px;
  padding: 10px 17px;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
  width: 100%;
}

.c8:disabled {
  cursor: unset;
  opacity: 0.4;
}

@media (min-width:768px) {
  .c5 {
    min-width: 250px;
  }
}

@media (min-width:768px) {
  .c3 {
    padding: 10px 20px;
  }
}

@media (min-width:768px) {
  .c1 {
    padding-left: 20px;
  }
}

<div
                class="ReactModalPortal"
              >
                <div
                  class="ReactModal__Overlay ReactModal__Overlay--after-open"
                  style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(255, 255, 255, 0.75);"
                >
                  <div
                    class="ReactModal__Content ReactModal__Content--after-open c0"
                    role="dialog"
                    tabindex="-1"
                  >
                    <div
                      class="c1"
                    >
                      <a
                        class="c2"
                      />
                    </div>
                    <div
                      class="c3"
                    >
                      <p
                        class="c4"
                      >
                        Enter the email address associated with your account and click submit. An email will be sent to you with a link to reset your password.
                      </p>
                      <form
                        novalidate=""
                      >
                        <div
                          class="c5 inputContainer"
                          label="Email Address"
                          name="email"
                          pattern="/^([^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+|\\\\x22([^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]|\\\\x5c[\\\\x00-\\\\x7f])*\\\\x22)(\\\\x2e([^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+|\\\\x22([^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]|\\\\x5c[\\\\x00-\\\\x7f])*\\\\x22))*\\\\x40([^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+|\\\\x5b([^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]|\\\\x5c[\\\\x00-\\\\x7f])*\\\\x5d)(\\\\x2e([^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+|\\\\x5b([^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]|\\\\x5c[\\\\x00-\\\\x7f])*\\\\x5d))*$/"
                          placeholder=""
                          type="email"
                          value=""
                        >
                          <input
                            class="c6"
                            id="email"
                            label="Email Address"
                            name="email"
                            pattern="/^([^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+|\\\\x22([^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]|\\\\x5c[\\\\x00-\\\\x7f])*\\\\x22)(\\\\x2e([^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+|\\\\x22([^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]|\\\\x5c[\\\\x00-\\\\x7f])*\\\\x22))*\\\\x40([^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+|\\\\x5b([^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]|\\\\x5c[\\\\x00-\\\\x7f])*\\\\x5d)(\\\\x2e([^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+|\\\\x5b([^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]|\\\\x5c[\\\\x00-\\\\x7f])*\\\\x5d))*$/"
                            placeholder=""
                            type="email"
                            value=""
                          />
                          <label
                            class="c7"
                            for="email"
                          >
                            Email Address
                          </label>
                        </div>
                        <button
                          class="c8"
                          type="submit"
                        >
                          Submit
                        </button>
                      </form>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <ModalPortal
              ariaHideApp={false}
              bodyOpenClassName="ReactModal__Body--open"
              className="c0"
              closeTimeoutMS={0}
              defaultStyles={
                Object {
                  "content": Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "#fff",
                    "border": "1px solid #ccc",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "left": "40px",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": "20px",
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                  },
                  "overlay": Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  },
                }
              }
              isOpen={true}
              onRequestClose={[MockFunction]}
              parentSelector={[Function]}
              portalClassName="ReactModalPortal"
              role="dialog"
              shouldCloseOnEsc={true}
              shouldCloseOnOverlayClick={true}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              style={
                Object {
                  "content": Object {},
                  "overlay": Object {},
                }
              }
            >
              <div
                className="ReactModal__Overlay ReactModal__Overlay--after-open"
                onClick={[Function]}
                onMouseDown={[Function]}
                style={
                  Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <div
                  className="ReactModal__Content ReactModal__Content--after-open c0"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onMouseUp={[Function]}
                  role="dialog"
                  style={Object {}}
                  tabIndex="-1"
                >
                  <styles__Header>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "styles__Header-sc-1wd5qfj-2",
                            "isStatic": false,
                            "lastClassName": "c1",
                            "rules": Array [
                              "display:flex;flex-direction:row-reverse;justify-content:space-between;margin-bottom:30px;@media (min-width:",
                              "768px",
                              "){padding-left:20px;}",
                            ],
                          },
                          "displayName": "styles__Header",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "styles__Header-sc-1wd5qfj-2",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c1"
                      >
                        <styles__Close
                          onClick={[MockFunction]}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "styles__Close-sc-1wd5qfj-1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "height:32px;opacity:0.3;position:relative;width:32px;&:hover{cursor:pointer;opacity:1;}&:before,&:after{background-color:#333;content:\\" \\";height:33px;left:15px;position:absolute;width:2px;}&:before{transform:rotate(45deg);}&:after{transform:rotate(-45deg);}",
                                  ],
                                },
                                "displayName": "styles__Close",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "styles__Close-sc-1wd5qfj-1",
                                "target": "a",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[MockFunction]}
                          >
                            <a
                              className="c2"
                              onClick={[MockFunction]}
                            />
                          </StyledComponent>
                        </styles__Close>
                      </div>
                    </StyledComponent>
                  </styles__Header>
                  <styles__Body>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "styles__Body-sc-1wd5qfj-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "@media (min-width:",
                              "768px",
                              "){padding:10px 20px;}",
                              [Function],
                            ],
                          },
                          "displayName": "styles__Body",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "styles__Body-sc-1wd5qfj-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c3"
                      >
                        <styles__Paragraph
                          mb="l"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "styles__Paragraph-sc-1upuse9-8",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "color:#666666;font-weight:300;line-height:1.9;margin-top:0;margin-bottom:16px;",
                                    [Function],
                                    " ",
                                    [Function],
                                    " a{color:inherit;text-decoration:none;&:hover{text-decoration underline;}}",
                                  ],
                                },
                                "displayName": "styles__Paragraph",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "styles__Paragraph-sc-1upuse9-8",
                                "target": "p",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            mb="l"
                          >
                            <p
                              className="c4"
                            >
                              Enter the email address associated with your account and click submit. An email will be sent to you with a link to reset your password.
                            </p>
                          </StyledComponent>
                        </styles__Paragraph>
                        <form
                          noValidate={true}
                          onSubmit={[Function]}
                        >
                          <ForwardRef
                            isRequired={true}
                            label="Email Address"
                            mb="m"
                            name="email"
                            onChange={[Function]}
                            pattern={/\\^\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\)\\*\\\\x40\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\)\\*\\$/}
                            placeholder=""
                            type="email"
                            value=""
                          >
                            <styles__InputContainer
                              className="inputContainer"
                              isRequired={true}
                              label="Email Address"
                              mb="m"
                              name="email"
                              onChange={[Function]}
                              pattern={/\\^\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\)\\*\\\\x40\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\)\\*\\$/}
                              placeholder=""
                              type="email"
                              value=""
                            >
                              <StyledComponent
                                className="inputContainer"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "styles__InputContainer-sc-223pk0-2",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "position:relative;width:100%;@media (min-width:",
                                        "768px",
                                        "){min-width:250px;}",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "styles__InputContainer",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "styles__InputContainer-sc-223pk0-2",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isRequired={true}
                                label="Email Address"
                                mb="m"
                                name="email"
                                onChange={[Function]}
                                pattern={/\\^\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\)\\*\\\\x40\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\)\\*\\$/}
                                placeholder=""
                                type="email"
                                value=""
                              >
                                <div
                                  className="c5 inputContainer"
                                  label="Email Address"
                                  name="email"
                                  onChange={[Function]}
                                  pattern={/\\^\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\)\\*\\\\x40\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\)\\*\\$/}
                                  placeholder=""
                                  type="email"
                                  value=""
                                >
                                  <styles__Input
                                    id="email"
                                    inError={false}
                                    isRequired={true}
                                    label="Email Address"
                                    mb="m"
                                    name="email"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    pattern={/\\^\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\)\\*\\\\x40\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\)\\*\\$/}
                                    placeholder=""
                                    type="email"
                                    value=""
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "styles__Input-sc-223pk0-1",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              "background-color:transparent;border:0;border-bottom:1px solid #e9ecef;border-radius:0;box-shadow:none;font-size:11pt;font-weight:300;margin-bottom:8px;outline:none;padding:12px 10px;transition:border-color 100ms;width:100%;&:hover{border-color:#b3b3b3;}&:focus{border-color:#2684ff;}&:focus + label{font-size:75%;transform:translate3d(0,-100%,0);opacity:1;}",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styles__Input",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "styles__Input-sc-223pk0-1",
                                          "target": "input",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={
                                        Object {
                                          "current": Object {
                                            "validate": [Function],
                                          },
                                        }
                                      }
                                      id="email"
                                      inError={false}
                                      isRequired={true}
                                      label="Email Address"
                                      mb="m"
                                      name="email"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      pattern={/\\^\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\)\\*\\\\x40\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\)\\*\\$/}
                                      placeholder=""
                                      type="email"
                                      value=""
                                    >
                                      <input
                                        className="c6"
                                        id="email"
                                        label="Email Address"
                                        name="email"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        pattern={/\\^\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x22\\(\\[\\^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x22\\)\\)\\*\\\\x40\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\(\\\\x2e\\(\\[\\^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff\\]\\+\\|\\\\x5b\\(\\[\\^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff\\]\\|\\\\x5c\\[\\\\x00-\\\\x7f\\]\\)\\*\\\\x5d\\)\\)\\*\\$/}
                                        placeholder=""
                                        type="email"
                                        value=""
                                      />
                                    </StyledComponent>
                                  </styles__Input>
                                  <styles__Label
                                    htmlFor="email"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "styles__Label-sc-223pk0-3",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "left:0;opacity:0.5;font-weight:300;padding-left:10px;padding-top:10px;position:absolute;top:0;transition:all 200ms;",
                                            ],
                                          },
                                          "displayName": "styles__Label",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "styles__Label-sc-223pk0-3",
                                          "target": "label",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      htmlFor="email"
                                    >
                                      <label
                                        className="c7"
                                        htmlFor="email"
                                      >
                                        Email Address
                                      </label>
                                    </StyledComponent>
                                  </styles__Label>
                                </div>
                              </StyledComponent>
                            </styles__InputContainer>
                          </ForwardRef>
                          <Button
                            type="submit"
                          >
                            <styles__Button
                              type="submit"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "styles__Button-sc-1mykk3k-0",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "align-items:center;background-color:#1188e6;border:1px solid #1288e5;border-radius:2px;color:#ffffff;cursor:pointer;display:flex;font-size:10pt;font-weight:300;justify-content:center;margin-bottom:11px;outline-width:3px;padding:10px 17px;transition:background-color 0.3s;&:disabled{cursor:unset;opacity:0.4;}",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "styles__Button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "styles__Button-sc-1mykk3k-0",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                type="submit"
                              >
                                <button
                                  className="c8"
                                  type="submit"
                                >
                                  Submit
                                </button>
                              </StyledComponent>
                            </styles__Button>
                          </Button>
                        </form>
                      </div>
                    </StyledComponent>
                  </styles__Body>
                </div>
              </div>
            </ModalPortal>
          </Portal>
        </Modal>
      </StyledComponent>
    </styles__Modal>
  </Modal>
</ResetPasswordModal>
`;
